// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
    id         String    @id @unique @default(uuid())
    google_id  String
    first_name String
    last_name  String
    email      String    @unique
    birthday   DateTime?
    gender     String?
    profile    Profile?
    createdAt  DateTime  @default(now())

    @@map("users")
}

model Profile {
    id          Int       @id @default(autoincrement())
    username    String?   @unique
    image_url   String
    defaultCity String?
    level       Int       @default(0)
    experience  Float     @default(0)
    comments    Comment[]

    reports Report[]
    ratings Json

    user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id String @unique
}

model Report {
    id               Int       @id @default(autoincrement())
    createdAt        DateTime  @default(now())
    address          String
    coordinates      Decimal[]
    image_url        String
    image_deleteHash String
    tags             Json
    suggestion       String
    hasTrashBins     Boolean   @default(true)

    note1 Int @default(0)
    note2 Int @default(0)
    note3 Int @default(0)
    note4 Int @default(0)
    note5 Int @default(0)

    resolved Boolean @default(false)
    approved Boolean @default(false)

    profile    Profile? @relation(fields: [profile_id], references: [id], onDelete: SetNull)
    profile_id Int?

    comments Comment[]
    @@map("reports")
}

model Comment {
    id        Int      @id @default(autoincrement())
    content   String
    createdAt DateTime @default(now())

    profile    Profile @relation(fields: [profile_id], references: [id], onDelete: Cascade)
    profile_id Int

    report    Report @relation(fields: [report_id], references: [id], onDelete: Cascade)
    report_id Int

    @@map("comments")
}
